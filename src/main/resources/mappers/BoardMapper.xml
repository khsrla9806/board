<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.board.boardproject.repository.BoardRepository">

	<!-- 게시글 목록 페이징 조회 -->
	<select id="findAll" parameterType="com.board.boardproject.web.dto.BoardGetRequestDto" resultMap="Board">
		SELECT
			b.id, b.title, b.content, b.created_date, b.modified_date,
        	m.id 'm_id',
        	m.nickname 'm_nickname',
        	m.password 'm_password',
        	m.created_date 'm_created_date',
        	m.modified_date 'm_modified_date'
		FROM board b
		INNER JOIN member m ON m.id = b.member_id
		<if test="keyword != null and !keyword.equals('')">
			WHERE title LIKE CONCAT('%', #{keyword}, '%')
		</if>
		ORDER BY b.id DESC
		LIMIT #{pageable.pageSize} OFFSET #{pageable.offset}
	</select>
	
	<select id="getTotalElementCount" resultType="int">
		SELECT COUNT(id) 
		FROM board
		<if test="keyword != null and !keyword.equals('')">
			WHERE title LIKE CONCAT('%', #{keyword}, '%')
		</if>
	</select>
	
	<!-- 내가 작성한 최근 게시글 조회 -->
	<select id="findByMemberIdWithSize" resultMap="Board">
		SELECT
			b.id, b.title, b.content, b.created_date, b.modified_date,
        	m.id 'm_id',
        	m.nickname 'm_nickname',
        	m.password 'm_password',
        	m.created_date 'm_created_date',
        	m.modified_date 'm_modified_date'
		FROM board b
		INNER JOIN member m ON m.id = b.member_id AND m.id = #{memberId}
		ORDER BY b.id DESC
		LIMIT #{size}
	</select>
	
	<!-- 게시글 단건 조회 -->
    <select id="findById" resultMap="Board">
        SELECT 
        	b.id, b.title, b.content, b.created_date, b.modified_date,
        	m.id 'm_id',
        	m.nickname 'm_nickname',
        	m.password 'm_password',
        	m.created_date 'm_created_date',
        	m.modified_date 'm_modified_date'
        FROM board b
        INNER JOIN member m ON m.id = b.member_id AND b.id = #{id}
    </select>
    
    <!-- 게시글 저장 -->
    <insert id="save" parameterType="com.board.boardproject.entity.Board">
		INSERT INTO board(title, content, member_id, created_date, modified_date)
		VALUES(#{title}, #{content}, #{member.id}, #{createdDate}, #{modifiedDate})
	</insert>
	
	<!-- 게시글 단건 수정 -->
	<update id="update" parameterType="com.board.boardproject.entity.Board">
		UPDATE board SET title = #{title}, content = #{content}, modified_date = #{modifiedDate} WHERE id = #{id}
	</update>
	
	<!-- 게시글 단건 삭제 -->
	<delete id="deleteById" parameterType="java.lang.Long">
		DELETE FROM board WHERE id = #{id}
	</delete>
    
    <resultMap id="Member" type="com.board.boardproject.entity.Member">
		<id column="m_id" property="id" />
		<result column="m_nickname" property="nickname" />
		<result column="m_password" property="password" />
		<result column="m_created_date" property="createdDate" />
		<result column="m_modified_date" property="modifiedDate" />
	</resultMap>
	
	<resultMap id="Board" type="com.board.boardproject.entity.Board">
		<id column="id" property="id" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="created_date" property="createdDate" />
		<result column="modified_date" property="modifiedDate" />
		<collection property="member" resultMap="Member" />
	</resultMap>
</mapper>